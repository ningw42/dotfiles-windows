{{ if eq .colorscheme "catppuccin-frappe" }}
"$schema" = "https://starship.rs/config-schema.json"

format = """
$directory\
$git_branch\
$git_status\
$nix_shell\
$fill\
$cmd_duration\
$os\
$username\
$hostname\
$time\
$line_break\
$character\
"""

palette = "catppuccin_frappe"

[palettes.catppuccin_frappe]
rosewater = "#f2d5cf"
flamingo = "#eebebe"
pink = "#f4b8e4"
mauve = "#ca9ee6"
red = "#e78284"
maroon = "#ea999c"
peach = "#ef9f76"
yellow = "#e5c890"
green = "#a6d189"
teal = "#81c8be"
sky = "#99d1db"
sapphire = "#85c1dc"
blue = "#8caaee"
lavender = "#babbf1"
text = "#c6d0f5"
subtext1 = "#b5bfe2"
subtext0 = "#a5adce"
overlay2 = "#949cbb"
overlay1 = "#838ba7"
overlay0 = "#737994"
surface2 = "#626880"
surface1 = "#51576d"
surface0 = "#414559"
base = "#303446"
mantle = "#292c3c"
crust = "#232634"

# modules to the left, remember to add an extra space to the right of them.
[directory]
format = "[$read_only]($read_only_style)[$path]($style) "
read_only = "Ôëñ "                                          # an extra space is appended because it would always has a space if we do it in directory.format
style = "fg:sapphire"
read_only_style = "fg:yellow"
truncation_length = 3
truncation_symbol = ".../"
use_os_path_sep = true                                    # OS specific path separator. e.g. "\" for Windows
fish_style_pwd_dir_length = 1                             # "~/Dev/Nix/nixpkgs/pkgs" will be "~/D/N/nixpkgs/pkgs" instead of "nixpkgs/pkgs"

[git_branch]
symbol = "Ôêò"
style = "fg:green"
format = "[$symbol  $branch ]($style)"

[git_status]
format = "($ahead_behind )($all_status )" # parentheses make them conditional strings, so that we won't end up with an extra space
# branch status ($ahead_behind)
ahead = "[‚á°${count}](fg:green)"
behind = "[‚á£${count}](fg:red)"
diverged = "[‚á°${ahead_count}](fg:green)[‚á£${behind_count}](fg:red)"
up_to_date = ""
# file status ($all_status)
conflicted = "[=${count}](fg:yellow)"
untracked = "[?${count}](fg:yellow)"
stashed = "[\\$${count}](fg:yellow)"  # "$" has to be excaped by "\$", so it becomes "\\$" in literal. the output would be "$3" if there are 3 stashes.
modified = "[!${count}](fg:yellow)"
staged = "[+${count}](fg:green)"
renamed = "[¬ª${count}](fg:yellow)"
deleted = "[‚úò${count}](fg:red)"

[nix_shell]
format = "[$symbol  $state\\($name\\) ]($style)" # "(" has to be escaped by "\(", so it becomes "\\(" in literal.
symbol = "Ôåì"
style = "fg:sapphire"


# module that conencts the left part and the right part
[fill]
symbol = "¬∑"
style = "fg:surface0"


# modules to the right, remember to add an extra space to the left of them.
# status of the previous command, not enabled in global format because it hasn't been configured properly
[status]
disabled = false
format = " [$symbol$status]($style)"
symbol = "‚ùå"
success_symbol = ""
not_executable_symbol = "ÓØû"
not_found_symbol = "üîç"
sigint_symbol = ""
signal_symbol = ""

[cmd_duration]
min_time = 5000                    # 5s
format = "[ Ôì£  $duration]($style)"
style = "fg:yellow"

[os]
style = "fg:overlay2"
format = "[ $symbol]($style)"
disabled = false

# just the OSs I use
[os.symbols]
Windows = "Û∞ç≤ "
Macos = "Û∞Äµ "
NixOS = "Ôåì "

[username]
show_always = true
style_user = "fg:overlay2"
style_root = "fg:red"
format = "[ $user]($style)"

[hostname]
ssh_only = false
style = "fg:overlay2"
format = "[@$hostname]($style)"

[time]
disabled = false
time_format = "%T"
style = "fg:blue"
format = "[ Ôê∫  $time ]($style)" # an extra space is appened at the last for fish's unknown truncation for the last character. https://github.com/starship/starship/discussions/6468


# second line
[line_break]
disabled = false

# not enabled in global format
[shell]
disabled = false

[character]
disabled = false
success_symbol = "[‚ùØ](bold fg:green)"
error_symbol = "[‚ùØ](bold fg:red)"
vimcmd_symbol = "[‚ùÆ](bold fg:green)"
vimcmd_replace_one_symbol = "[‚ùÆ](bold fg:pink)"
vimcmd_replace_symbol = "[‚ùÆ](bold fg:pink)"
vimcmd_visual_symbol = "[‚ùÆ](bold fg:yellow)"

{{ else if eq .colorscheme "everforest-dark" }}
"$schema" = "https://starship.rs/config-schema.json"

format = """
$directory\
$git_branch\
$git_status\
$nix_shell\
$fill\
$cmd_duration\
$os\
$username\
$hostname\
$time\
$line_break\
$character\
"""

palette = "everforest-dark"

[palettes.everforest-dark]
bg_dim = "#232a2e"
bg0 = "#2d353b"
bg1 = "#343f44"
bg2 = "#3d484d"
bg3 = "#475258"
bg4 = "#4f585e"
bg5 = "#56635f"
bg_visual = "#514045"
bg_red = "#543a48"
bg_green = "#425047"
bg_blue = "#3a515d"
bg_yellow = "#4d4c43"

fg = "#d3c6aa"
red = "#e67e80"

orange = "#e69875"
yellow = "#dbbc7f"
green = "#a7c080"
aqua = "#83c092"
blue = "#7fbbb3"
purple = "#d699b6"
grey0 = "#7a8478"
grey1 = "#859289"
grey2 = "#9da9a0"
statusline1 = "#a7c080"
statusline2 = "#d3c6aa"
statusline3 = "#e67e80"

# modules to the left, remember to add an extra space to the right of them.
[directory]
format = "[$read_only]($read_only_style)[$path]($style) "
read_only = "Ôëñ "                                          # an extra space is appended because it would always has a space if we do it in directory.format
style = "fg:blue"
read_only_style = "fg:yellow"
truncation_length = 3
truncation_symbol = ".../"
use_os_path_sep = true                                    # OS specific path separator. e.g. "\" for Windows
fish_style_pwd_dir_length = 1                             # "~/Dev/Nix/nixpkgs/pkgs" will be "~/D/N/nixpkgs/pkgs" instead of "nixpkgs/pkgs"

[git_branch]
symbol = "Ôêò"
style = "fg:green"
format = "[$symbol  $branch ]($style)"

[git_status]
format = "($ahead_behind )($all_status )" # parentheses make them conditional strings, so that we won't end up with an extra space
# branch status ($ahead_behind)
ahead = "[‚á°${count}](fg:green)"
behind = "[‚á£${count}](fg:red)"
diverged = "[‚á°${ahead_count}](fg:green)[‚á£${behind_count}](fg:red)"
up_to_date = ""
# file status ($all_status)
conflicted = "[=${count}](fg:yellow)"
untracked = "[?${count}](fg:yellow)"
stashed = "[\\$${count}](fg:yellow)"  # "$" has to be excaped by "\$", so it becomes "\\$" in literal. the output would be "$3" if there are 3 stashes.
modified = "[!${count}](fg:yellow)"
staged = "[+${count}](fg:green)"
renamed = "[¬ª${count}](fg:yellow)"
deleted = "[‚úò${count}](fg:red)"

[nix_shell]
format = "[$symbol  $state\\($name\\) ]($style)" # "(" has to be escaped by "\(", so it becomes "\\(" in literal.
symbol = "Ôåì"
style = "fg:blue"


# module that conencts the left part and the right part
[fill]
symbol = "¬∑"
style = "fg:bg1"


# modules to the right, remember to add an extra space to the left of them.
# status of the previous command, not enabled in global format because it hasn't been configured properly
[status]
disabled = false
format = " [$symbol$status]($style)"
symbol = "‚ùå"
success_symbol = ""
not_executable_symbol = "ÓØû"
not_found_symbol = "üîç"
sigint_symbol = ""
signal_symbol = ""

[cmd_duration]
min_time = 5000                    # 5s
format = "[ Ôì£  $duration]($style)"
style = "fg:yellow"

[os]
style = "fg:bg3"
format = "[ $symbol]($style)"
disabled = false

# just the OSs I use
[os.symbols]
Windows = "Û∞ç≤ "
Macos = "Û∞Äµ "
NixOS = "Ôåì "

[username]
show_always = true
style_user = "fg:bg3"
style_root = "fg:red"
format = "[ $user]($style)"

[hostname]
ssh_only = false
style = "fg:bg3"
format = "[@$hostname]($style)"

[time]
disabled = false
time_format = "%T"
style = "fg:blue"
format = "[ Ôê∫  $time ]($style)" # an extra space is appened at the last for fish's unknown truncation for the last character. https://github.com/starship/starship/discussions/6468


# second line
[line_break]
disabled = false

# not enabled in global format
[shell]
disabled = false

[character]
disabled = false
success_symbol = "[‚ùØ](bold fg:green)"
error_symbol = "[‚ùØ](bold fg:red)"
vimcmd_symbol = "[‚ùÆ](bold fg:green)"
vimcmd_replace_one_symbol = "[‚ùÆ](bold fg:purple)"
vimcmd_replace_symbol = "[‚ùÆ](bold fg:purple)"
vimcmd_visual_symbol = "[‚ùÆ](bold fg:yellow)"

{{ else if eq .colorscheme "gruvbox-dark" }}
"$schema" = "https://starship.rs/config-schema.json"

format = """
$directory\
$git_branch\
$git_status\
$nix_shell\
$fill\
$cmd_duration\
$os\
$username\
$hostname\
$time\
$line_break\
$character\
"""

palette = "gruvbox_dark"

[palettes.gruvbox_dark]
fg = "#ebdbb2" # alias of fg1
fg0 = "#fbf1c7"
fg1 = "#ebdbb2"
fg2 = "#d5c4a1"
fg3 = "#bdae93"
fg4 = "#a89984"
bg = "#282828" # alias of bg0
bg0_soft = "#32302f"
bg0_hard = "#1d2021"
bg0 = "#282828"
bg1 = "#3c3836"
bg2 = "#504945"
bg3 = "#665c54"
bg4 = "#7c6f64"
red = "#cc241d"
green = "#98971a"
yellow = "#d79921"
blue = "#458588"
purple = "#b16286"
aqua = "#689d6a"
orange = "#d65d0e"
bright_red = "#fb4934"
bright_green = "#b8bb26"
bright_yellow = "#fabd2f"
bright_blue = "#83a598"
bright_purple = "#d3879b"
bright_aqua = "#8ec07c"
bright_orange = "#fe8019"

# modules to the left, remember to add an extra space to the right of them.
[directory]
format = "[$read_only]($read_only_style)[$path]($style) "
read_only = "Ôëñ " # an extra space is appended because it would always has a space if we do it in directory.format
style = "fg:bright_blue"
read_only_style = "fg:bright_yellow"
truncation_length = 3
truncation_symbol = ".../"
use_os_path_sep = true # OS specific path separator. e.g. "\" for Windows
fish_style_pwd_dir_length = 1 # "~/Dev/Nix/nixpkgs/pkgs" will be "~/D/N/nixpkgs/pkgs" instead of "nixpkgs/pkgs"

[git_branch]
symbol = "Ôêò"
style = "fg:bright_green"
format = "[$symbol  $branch ]($style)"

[git_status]
format = "($ahead_behind )($all_status )" # parentheses make them conditional strings, so that we won't end up with an extra space
# branch status ($ahead_behind)
ahead = "[‚á°${count}](fg:bright_green)"
behind = "[‚á£${count}](fg:bright_red)"
diverged = "[‚á°${ahead_count}](fg:bright_green)[‚á£${behind_count}](fg:bright_red)"
up_to_date = ""
# file status ($all_status)
conflicted = "[=${count}](fg:yellow)"
untracked = "[?${count}](fg:yellow)"
stashed = "[\\$${count}](fg:yellow)" # "$" has to be excaped by "\$", so it becomes "\\$" in literal. the output would be "$3" if there are 3 stashes.
modified = "[!${count}](fg:yellow)"
staged = "[+${count}](fg:green)"
renamed = "[¬ª${count}](fg:yellow)"
deleted = "[‚úò${count}](fg:red)"

[nix_shell]
format = "[$symbol  $state\\($name\\) ]($style)" # "(" has to be escaped by "\(", so it becomes "\\(" in literal.
symbol = "Ôåì"
style = "fg:bright_blue"


# module that conencts the left part and the right part
[fill]
symbol = "¬∑"
style = "fg:bg1"


# modules to the right, remember to add an extra space to the left of them.
# status of the previous command, not enabled in global format because it hasn't been configured properly
[status]
disabled = false
format = " [$symbol$status]($style)"
symbol = "‚ùå"
success_symbol = ""
not_executable_symbol = "ÓØû"
not_found_symbol = "üîç"
sigint_symbol = ""
signal_symbol = ""

[cmd_duration]
min_time = 5000 # 5s
format = "[ Ôì£  $duration]($style)"
style = "fg:yellow"

[os]
style = "fg:fg3"
format = "[ $symbol]($style)"
disabled = false

# just the OSs I use
[os.symbols]
Windows = "Û∞ç≤ "
Macos = "Û∞Äµ "
NixOS = "Ôåì "

[username]
show_always = true
style_user = "fg:fg3"
style_root = "fg:bright_red"
format = "[ $user]($style)"

[hostname]
ssh_only = false
style = "fg:fg3"
format = "[@$hostname]($style)"

[time]
disabled = false
time_format = "%T"
style = "fg:blue"
format = "[ Ôê∫  $time]($style)"


# second line
[line_break]
disabled = false

# not enabled in global format
[shell]
disabled = false

[character]
disabled = false
success_symbol = "[‚ùØ](bold fg:bright_green)"
error_symbol = "[‚ùØ](bold fg:bright_red)"
vimcmd_symbol = "[‚ùÆ](bold fg:bright_green)"
vimcmd_replace_one_symbol = "[‚ùÆ](bold fg:bright_purple)"
vimcmd_replace_symbol = "[‚ùÆ](bold fg:bright_purple)"
vimcmd_visual_symbol = "[‚ùÆ](bold fg:bright_yellow)"

{{ end }}
